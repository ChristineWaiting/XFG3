## Plot 2: model residuals
res.uk = c(commonans0709$vt[1, -1], commonans0915$vt[1, -1])
res.fr = c(commonans0709$vt[2, -1], commonans0915$vt[2, -1])
res.sw = c(commonans0709$vt[3, -1], commonans0915$vt[3, -1])
res.it = c(commonans0709$vt[4, -1], commonans0915$vt[4, -1])
res.de = c(commonans0915$vt[5, -1])
res1 = ts(res.uk, frequency = 12, start = c(2007, 9))
res2 = ts(res.fr, frequency = 12, start = c(2007, 9))
res3 = ts(res.sw, frequency = 12, start = c(2007, 9))
res4 = ts(res.it, frequency = 12, start = c(2007, 9))
res5 = ts(res.de, frequency = 12, start = c(2009, 9))
plot(res1, lwd = 2, ylim = c(-3, 3), col = "red", type = "l", ylab = NA, xlab = NA)
lines(res5, lwd = 2, col = "gray")
lines(res2, lwd = 2, col = "blue", lty = 2)
lines(res3, lwd = 3, col = "green3", lty = 4)
lines(res4, lwd = 2, col = "black", lty = 3)
setwd("~/MTS/MTS_comexpinf_cds")
yaml.load_file("Metainfo.txt")
## read CDS data: eucds1 contains CDS across five countries
eucds = read.csv("eurocds_33343.csv", header = T, sep = ";")
eucds_date = eucds[, 1]
st1 = which(eucds_date == "01.11.2009")
et1 = which(eucds_date == "01.12.2014")
eucds1 = eucds[(st1:et1), 2:6]
mcds1 = as.matrix(t(eucds1))
mcds2 = matrix(rep(mcds1[4, ], 5), nr = 5)
## load dataset
load("expinf.RData")
uk.epi = expinf[, 1]
fr.epi = expinf[, 2]
sw.epi = expinf[, 3]
it.epi = expinf[, 4]
de.epi = expinf[, 5]
ukts2 = ts(uk.epi, frequency = 12, start = c(2006, 6))
dets2 = ts(de.epi, frequency = 12, start = c(2009, 6))
frts2 = ts(fr.epi, frequency = 12, start = c(2006, 6))
itts2 = ts(it.epi, frequency = 12, start = c(2007, 6))
swts2 = ts(sw.epi, frequency = 12, start = c(2007, 4))
## select the time period contains all five countries
ukepi = uk.epi[39:100]
frepi = fr.epi[39:100]
swepi = sw.epi[25:86]
itepi = it.epi[27:88]
deepi = de.epi[1:62]
y51 = matrix(c(ukepi, frepi, itepi, swepi, deepi), nr = 5)
## the model with macroeconomic factor - default proxy
jointmodel = function(q1, b1, b2, b3, b4, b5, a1, a2, a3, a4, a5, p1) {
Tt = matrix(c(q1), 1, 1)
Zt = rbind(b1, b2, b3, b4, b5)
ct = matrix(diag(c(a1, a2, a3, a4, a5)), 5, 5) %*% mcds2
dt = matrix(c(p1), 1, 1)
GGt = matrix(0.1 * diag(5), 5, 5)
HHt = matrix(0.1 * diag(1), 1, 1)
a0 = mean(y51[, 1])
P0 = HHt * 10
return(list(a0 = a0, P0 = P0, ct = ct, dt = dt, Zt = Zt, Tt = Tt, GGt = GGt,
HHt = HHt))
}
objective = function(theta, yt) {
sp = jointmodel(theta["q1"], theta["b1"], theta["b2"], theta["b3"], theta["b4"],
theta["b5"], theta["a1"], theta["a2"], theta["a3"], theta["a4"],
theta["a5"], theta["p1"])
ans = fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt, yt = yt)
return(-ans$logLik)
}
theta = c(q1 = c(0.2), b = c(0.5, 0.5, 0.5, 0.5, 0.5),
a = c(0.3, 0.3, 0.3, 0.3, 0.3), p1 = c(0.8))
fit = optim(theta, objective, yt = y51, hessian = TRUE)
sp = jointmodel(fit$par["q1"], fit$par["b1"], fit$par["b2"], fit$par["b3"],
fit$par["b4"], fit$par["b5"], fit$par["a1"], fit$par["a2"], fit$par["a3"],
fit$par["a4"], fit$par["a5"], fit$par["p1"])
ans = fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt, Zt = sp$Zt,
HHt = sp$HHt, GGt = sp$GGt, yt = y51)
comexp0914mac = c(ans$at[-1])
comexp0914filtermac = c(ans$att[-1])
commonans0915mac = ans
## select the time period contains four countries
st1 = which(eucds_date == "01.01.2008")
et1 = which(eucds_date == "01.10.2009")
eucds1 = eucds[(st1:et1), 2:6]
mcds1 = as.matrix(t(eucds1))
mcds3 = matrix(rep(mcds1[4, ], 4), nr = 4)
ukepi = uk.epi[18:39]
frepi = fr.epi[18:39]
swepi = sw.epi[8:29]
itepi = it.epi[6:27]
y51 = matrix(c(ukepi, frepi, itepi, swepi), nr = 4)
mcds3 = matrix(rep(mcds1[4, ], 4), nr = 4)
## the joint model incorporates the macroeconomic factor
jointmodel = function(q1, b1, b2, b3, b4, a1, a2, a3, a4, p1) {
Tt = matrix(c(q1), 1, 1)
Zt = rbind(b1, b2, b3, b4)
ct = matrix(diag(c(a1, a2, a3, a4)), 4, 4) %*% mcds3
dt = matrix(c(p1), 1, 1)
GGt = matrix(0.1 * diag(4), 4, 4)
HHt = matrix(0.1 * diag(1), 1, 1)
a0 = mean(y51[, 1])
P0 = HHt * 10
return(list(a0 = a0, P0 = P0, ct = ct, dt = dt, Zt = Zt, Tt = Tt, GGt = GGt,
HHt = HHt))
}
objective = function(theta, yt) {
sp = jointmodel(theta["q1"], theta["b1"], theta["b2"], theta["b3"], theta["b4"],
theta["a1"], theta["a2"], theta["a3"], theta["a4"], theta["p1"])
ans = fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt, yt = yt)
return(-ans$logLik)
}
theta = c(q1 = c(0.8), b = c(0.6, 0.6, 0.6, 0.6), a = c(0.2, 0.2, 0.2,
0.2), p1 = c(0.8))
fit = optim(theta, objective, yt = y51, hessian = TRUE)
sp = jointmodel(fit$par["q1"], fit$par["b1"], fit$par["b2"], fit$par["b3"], fit$par["b4"],
fit$par["a1"], fit$par["a2"], fit$par["a3"], fit$par["a4"], fit$par["p1"])
ans = fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt, Zt = sp$Zt,
HHt = sp$HHt, GGt = sp$GGt, yt = y51)
comexp0709mac = c(ans$at[-1])
comexp0709filtermac = c(ans$att[-1])
commonans0709mac = ans
comexp0714mac = c(comexp0709mac, comexp0914mac)
comexpts1 = ts(comexp0714mac, frequency = 12, start = c(2007, 1))
comexp0714filtermac = c(comexp0709filtermac, comexp0914filtermac)
comexpts2 = ts(comexp0714filtermac, frequency = 12, start = c(2007, 1))
## Plot 1: common inflation factor
plot(ukts2, col = "grey", lwd = 2, ylim = c(-1, 4), xlab = NA, ylab = NA)
lines(dets2, col = "grey", lwd = 2)
lines(frts2, col = "grey", lwd = 2)
lines(itts2, col = "grey", lwd = 2)
lines(swts2, col = "grey", lwd = 2)
lines(comexpts1, col = "red", lwd = 2.5)
lines(comexpts2, col = "blue", lty = 2, lwd = 2.5)
## Plot 2: model residuals
res.uk = c(commonans0709mac$vt[1, -1], commonans0915mac$vt[1, -1])
res.fr = c(commonans0709mac$vt[2, -1], commonans0915mac$vt[2, -1])
res.sw = c(commonans0709mac$vt[3, -1], commonans0915mac$vt[3, -1])
res.it = c(commonans0709mac$vt[4, -1], commonans0915mac$vt[4, -1])
res.de = c(commonans0915mac$vt[5, -1])
res1 = ts(res.uk, frequency = 12, start = c(2007, 9))
res2 = ts(res.fr, frequency = 12, start = c(2007, 9))
res3 = ts(res.sw, frequency = 12, start = c(2007, 9))
res4 = ts(res.it, frequency = 12, start = c(2007, 9))
res5 = ts(res.de, frequency = 12, start = c(2009, 9))
plot(res1, lwd = 2, ylim = c(-3, 3), col = "red", type = "l", xlab = NA, ylab = NA)
lines(res5, lwd = 2, col = "gray")
lines(res2, lwd = 2, col = "blue", lty = 2)
lines(res3, lwd = 3, col = "green3", lty = 4)
lines(res4, lwd = 2, col = "black", lty = 3)
setwd("~/MTS/MTS_expinf")
yaml.load_file("Metainfo.txt")
## load datafile
load("IEdata.RData")
## Plots
par(mfrow = c(3, 2), pty = "m")
ukts1 = ts(IEdata$uk.pi, frequency = 12, start = c(2006, 6))
ukts2 = ts(IEdata$uk.epi1, frequency = 12, start = c(2006, 6))
ukts3 = ts(IEdata$uk.epi2, frequency = 12, start = c(2006, 6))
plot(ukts1, ylim = c(-2, 5), col = "grey", main = "U.K. IE", lwd = 2)
lines(ukts2, col = "red", lwd = 2)
lines(ukts3, col = "blue", lty = 2, lwd = 2)
dets1 = ts(IEdata$de.pi, frequency = 12, start = c(2009, 6))
dets2 = ts(IEdata$de.epi1, frequency = 12, start = c(2009, 6))
dets3 = ts(IEdata$de.epi2, frequency = 12, start = c(2009, 6))
plot(dets1, col = "grey", ylim = c(-1, 2), main = "Germany IE", lwd = 2)
lines(dets2, col = "red", lwd = 2)
lines(dets3, col = "blue", lty = 2, lwd = 2)
frts1 = ts(IEdata$fr.pi, frequency = 12, start = c(2006, 6))
frts2 = ts(IEdata$fr.epi1, frequency = 12, start = c(2006, 6))
frts3 = ts(IEdata$fr.epi2, frequency = 12, start = c(2006, 6))
plot(frts1, col = "grey", ylim = c(-1, 4), main = "France IE", lwd = 2)
lines(frts2, col = "red", lwd = 2)
lines(frts3, col = "blue", lty = 2, lwd = 2)
itts1 = ts(IEdata$it.pi, frequency = 12, start = c(2007, 6))
itts2 = ts(IEdata$it.epi1, frequency = 12, start = c(2007, 6))
itts3 = ts(IEdata$it.epi2, frequency = 12, start = c(2007, 6))
plot(itts1, col = "grey", ylim = c(-1, 4), main = "Italy IE", lwd = 2)
lines(itts2, col = "red", lwd = 2)
lines(itts3, col = "blue", lty = 2, lwd = 2)
swts1 = ts(IEdata$sw.pi, frequency = 12, start = c(2007, 4))
swts2 = ts(IEdata$sw.epi1, frequency = 12, start = c(2007, 4))
swts3 = ts(IEdata$sw.epi2, frequency = 12, start = c(2007, 4))
plot(swts1, col = "grey", ylim = c(-1, 4), main = "Sweden IE", lwd = 2)
lines(swts2, col = "red", lwd = 2)
lines(swts3, col = "blue", lty = 2, lwd = 2)
## Plot: comparison
par(mfrow = c(1, 1), pty = "m")
plot(ukts2, lty = 3, lwd = 3, col = "red", ylim = c(-1, 4), ylab = "Inflation expectation")
lines(dets2, lty = 2, col = "blue", lwd = 3)
lines(frts2, lty = 1, col = "black", lwd = 3)
lines(itts2, lty = 4, col = "green3", lwd = 3)
lines(swts2, lty = 1, col = "grey", lwd = 3)
setwd("~/MTS/MTS_multi_modleres")
yaml.load_file("Metainfo.txt")
par(mfrow = c(3, 2), pty = "m")
## For UK
load("joiuk0915ans.RData")
ans = joiuk0915ans
res1 = ts(ans$vt[1, -1], frequency = 12, start = c(2006, 6))
res2 = ts(ans$vt[2, -1], frequency = 12, start = c(2006, 6))
res3 = ts(ans$vt[3, -1], frequency = 12, start = c(2006, 6))
res4 = ts(ans$vt[4, -1], frequency = 12, start = c(2006, 6))
res5 = ts(ans$vt[5, -1], frequency = 12, start = c(2006, 6))
res6 = ts(ans$vt[6, -1], frequency = 12, start = c(2006, 6))
plot(res1, lty = 1, lwd = 3, col = "red", ylim = c(-3, 3), main = "United Kingdom")
lines(res2, lty = 3, col = "blue", lwd = 3)
lines(res3, lty = 6, col = "black", lwd = 3)
lines(res4, lty = 4, col = "darkolivegreen3", lwd = 3)
lines(res5, lty = 1, col = "grey", lwd = 3)
lines(res6, lty = 2, col = "orange", lwd = 3)
## For Germany
load("joide0915ans.RData")
ans = joide0915ans
res1 = ts(ans$vt[1, -1], frequency = 12, start = c(2009, 6))
res2 = ts(ans$vt[2, -1], frequency = 12, start = c(2009, 6))
res3 = ts(ans$vt[3, -1], frequency = 12, start = c(2009, 6))
res4 = ts(ans$vt[4, -1], frequency = 12, start = c(2009, 6))
res5 = ts(ans$vt[5, -1], frequency = 12, start = c(2009, 6))
res6 = ts(ans$vt[6, -1], frequency = 12, start = c(2009, 6))
plot(res1, lty = 1, lwd = 3, col = "red", ylim = c(-3, 3), main = "Germany")
lines(res2, lty = 3, col = "blue", lwd = 3)
lines(res3, lty = 6, col = "black", lwd = 3)
lines(res4, lty = 4, col = "darkolivegreen3", lwd = 3)
lines(res5, lty = 1, col = "grey", lwd = 3)
lines(res6, lty = 2, col = "orange", lwd = 3)
## For France
load("joifr0915ans.RData")
ans = joifr0915ans
res1 = ts(ans$vt[1, -1], frequency = 12, start = c(2006, 6))
res2 = ts(ans$vt[2, -1], frequency = 12, start = c(2006, 6))
res3 = ts(ans$vt[3, -1], frequency = 12, start = c(2006, 6))
res4 = ts(ans$vt[4, -1], frequency = 12, start = c(2006, 6))
res5 = ts(ans$vt[5, -1], frequency = 12, start = c(2006, 6))
res6 = ts(ans$vt[6, -1], frequency = 12, start = c(2006, 6))
plot(res1, lty = 1, lwd = 3, col = "red", ylim = c(-3, 3), main = "France")
lines(res2, lty = 3, col = "blue", lwd = 3)
lines(res3, lty = 6, col = "black", lwd = 3)
lines(res4, lty = 4, col = "darkolivegreen3", lwd = 3)
lines(res5, lty = 1, col = "grey", lwd = 3)
lines(res6, lty = 2, col = "orange", lwd = 3)
### For Italy
load("joiit0715ans.RData")
ans = joiit0715ans
res1 = ts(ans$vt[1, -1], frequency = 12, start = c(2007, 6))
res2 = ts(ans$vt[2, -1], frequency = 12, start = c(2007, 6))
res3 = ts(ans$vt[3, -1], frequency = 12, start = c(2007, 6))
res4 = ts(ans$vt[4, -1], frequency = 12, start = c(2007, 6))
res5 = ts(ans$vt[5, -1], frequency = 12, start = c(2007, 6))
res6 = ts(ans$vt[6, -1], frequency = 12, start = c(2007, 6))
plot(res1, lty = 1, lwd = 3, col = "red", ylim = c(-3, 4.5), main = "Italy")
lines(res2, lty = 3, col = "blue", lwd = 3)
lines(res3, lty = 6, col = "black", lwd = 3)
lines(res4, lty = 4, col = "darkolivegreen3", lwd = 3)
lines(res5, lty = 1, col = "grey", lwd = 3)
lines(res6, lty = 2, col = "orange", lwd = 3)
## For Sweden
load("joisw0714ans.RData")
ans = joisw0714ans
res1 = ts(ans$vt[1, -1], frequency = 12, start = c(2007, 4))
res2 = ts(ans$vt[2, -1], frequency = 12, start = c(2007, 4))
res3 = ts(ans$vt[3, -1], frequency = 12, start = c(2007, 4))
res4 = ts(ans$vt[4, -1], frequency = 12, start = c(2007, 4))
res5 = ts(ans$vt[5, -1], frequency = 12, start = c(2007, 4))
res6 = ts(ans$vt[6, -1], frequency = 12, start = c(2007, 4))
plot(res1, lty = 1, lwd = 3, col = "red", ylim = c(-3, 3), main = "Sweden")
lines(res2, lty = 3, col = "blue", lwd = 3)
lines(res3, lty = 6, col = "black", lwd = 3)
lines(res4, lty = 4, col = "darkolivegreen3", lwd = 3)
lines(res5, lty = 1, col = "grey", lwd = 3)
lines(res6, lty = 2, col = "orange", lwd = 3)
n <- 10
shape <- scale <- 1
x <- seq(0, 3, length=1000)
sp <- saddlepoint(x, n, gammaCumulants(shape, scale))
plot(sp, lwd=2)
# Mean of n Gamma(1,1) variables is n*Gamma(n,1) distributed
lines(x, n*dgamma(n*x, shape=n*shape, scale=scale), col=2)
install.packages("EQL")
library("EQL")
n <- 10
shape <- scale <- 1
x <- seq(0, 3, length=1000)
sp <- saddlepoint(x, n, gammaCumulants(shape, scale))
plot(sp, lwd=2)
# Mean of n Gamma(1,1) variables is n*Gamma(n,1) distributed
lines(x, n*dgamma(n*x, shape=n*shape, scale=scale), col=2)
persp(seq(10, 300, 5), seq(10, 300, 5), z, phi = 45, theta = 45,
xlab = "X Coordinate (feet)", ylab = "Y Coordinate (feet)",
main = "Surface elevation data"
)
persp(seq(10, 300, 5), seq(10, 300, 5), z, phi = 45, theta = 45,
xlab = "X Coordinate (feet)", ylab = "Y Coordinate (feet)",
main = "Surface elevation data"
)
x=seq(10, 300, 5)
y=seq(10, 300, 5)
y=x^2+y^2
persp(seq(10, 300, 5), seq(10, 300, 5), z, phi = 45, theta = 45,
xlab = "X Coordinate (feet)", ylab = "Y Coordinate (feet)",
main = "Surface elevation data"
)
z=x^2+y^2
persp(seq(10, 300, 5), seq(10, 300, 5), z, phi = 45, theta = 45,
xlab = "X Coordinate (feet)", ylab = "Y Coordinate (feet)",
main = "Surface elevation data"
)
function (x, y, z, ..., colvar = z, phi = 40, theta = 40, col = NULL,          NAcol = "white", colkey = NULL, panel.first = NULL, clim = NULL,          clab = NULL, bty = "b", CI = NULL, surf = NULL, add = FALSE,          plot = TRUE)
function (x, y, z, colvar = z, phi = 40, theta = 40, col = NULL,          NAcol = "white", colkey = NULL, panel.first = NULL, clim = NULL,          clab = NULL, bty = "b", CI = NULL, surf = NULL, add = FALSE,          plot = TRUE)
function (x, y, z)
plot(x,y,z)
x<-seq(-10,10,by=1)
y<-seq(-10,10,by=1)
#z<-x^2-y^2
M<-mesh(x,y)
z<-matrix(0,nr=length(x),nc=length(y))
for (i in 1:nrow(z))
{
for (j in 1:ncol(z))
z[i,j]<-x[i]^2-y[j]^2
}
par(bg="blue")
persp(x,y,z,phi=45,theta=45,col="
)
)
rm(list=ls(all=T))
x<-seq(-10,10,by=1)
y<-seq(-10,10,by=1)
#z<-x^2-y^2
M<-mesh(x,y)
z<-matrix(0,nr=length(x),nc=length(y))
for (i in 1:nrow(z))
{
for (j in 1:ncol(z))
z[i,j]<-x[i]^2-y[j]^2
}
par(bg="blue")
persp(x,y,z,phi=45,theta=45,col="chartreuse1",shade=0.2,ticktype="simple")
points(x=0,y=0,col="red",pch=8)
rm(list=ls(all=T))
x<-seq(-10,10,by=1)
y<-seq(-10,10,by=1)
#z<-x^2-y^2
M<-mesh(x,y)
z<-matrix(0,nr=length(x),nc=length(y))
for (i in 1:nrow(z))
{
for (j in 1:ncol(z))
z[i,j]<-x[i]^2-y[j]^2
}
par(bg="transparent")
persp(x,y,z,phi=45,theta=45,col="chartreuse1",shade=0.2,ticktype="simple")
points(x=0,y=0,col="red",pch=8)
x<-seq(-10,10,by=1)
y<-seq(-10,10,by=1)
#z<-x^2-y^2
M<-mesh(x,y)
z<-matrix(0,nr=length(x),nc=length(y))
for (i in 1:nrow(z))
{
for (j in 1:ncol(z))
z[i,j]<-x[i]^2-y[j]^2
}
par(bg="transparent")
persp(x,y,z,phi=45,theta=45,col="chartreuse1",shade=0.2,ticktype="simple")
points(x=0,y=0,col="red",pch=8)
x<-seq(-10,10,by=1)
y<-seq(-10,10,by=1)
#z<-x^2-y^2
%M<-mesh(x,y)
z<-matrix(0,nr=length(x),nc=length(y))
for (i in 1:nrow(z))
rm(list=ls(all=T))
x<-seq(-10,10,by=1)
y<-seq(-10,10,by=1)
#z<-x^2-y^2
#M<-mesh(x,y)
z<-matrix(0,nr=length(x),nc=length(y))
for (i in 1:nrow(z))
{
for (j in 1:ncol(z))
z[i,j]<-x[i]^2-y[j]^2
}
par(bg="transparent")
persp(x,y,z,phi=45,theta=45,col="chartreuse1",shade=0.2,ticktype="simple")
points(x=0,y=0,col="red",pch=8)
par(bg="transparent")
persp(x,y,z,phi=45,theta=45,col="chartreuse1",shade=0.2,ticktype="simple", expand = 2)
points(x=0,y=0,col="red",pch=8)
persp(x,y,z,phi=45,theta=45,col="chartreuse1",shade=0.2,ticktype="simple", scale = 2)
points(x=0,y=0,col="red",pch=8)
par(bg="transparent")
persp(x,y,z,phi=45,theta=45,col="chartreuse1",shade=0.2,ticktype="simple", scale = 2)
points(x=0,y=0,col="red",pch=8)
persp(x,y,z,phi=45,theta=45,col="chartreuse1",shade=0.2,ticktype="simple", scale = 5)
points(x=0,y=0,col="red",pch=8)
persp(x,y,z,phi=45,theta=45,col="chartreuse1",shade=0.2,ticktype="simple", scale = 5)
points(x=0,y=0,col="red",pch=8)
par(bg="transparent")
persp(x,y,z,phi=45,theta=45,col="chartreuse1",shade=0.2,ticktype="simple", scale = 5)
points(x=0,y=0,col="red",pch=8)
par(nfrow=c(1,1))
par(bg="transparent")
par(bg="transparent")
persp(x,y,z,phi=45,theta=45,col="chartreuse1",shade=0.2,ticktype="simple", scale = 5)
points(x=0,y=0,col="red",pch=8)
aaa <- matrix(c(1,1,2,3),2,2)
bbb <- matrix(c(4,2,13,3),2,2)
aaa
bbb
aaa %*% bbb
aaa * bbb
kron(aaa, bbb)
load("fit1.RData")
rm(list = ls(all = TRUE))
graphics.off()
libraries = c("SIS", "forecast", "glmnet", "lars", "ncvreg", "vars", "mice", "VIM")
lapply(libraries, library, quietly = TRUE, character.only = TRUE)
setwd("~/Dropbox/SIS/Codes")
load("fit1.RData")
str(fit1)
fit1$fit
str(fit1)
fit1$ix
length(fit1$ix)
library(formatR)
setwd("~/XFG3/XFGbetatsacf")
tidy_source
tidy_source(source = "XFGbetatsacf.R", indent = 2, width.cutoff = 80, file = "output.R"=
tidy_source(source = "XFGbetatsacf.R", indent = 2, width.cutoff = 80, file = "output.R")
rm(list = ls(all = TRUE))
graphics.off()
# read data
ibm = read.table("ibmBeta.dat", header = F, col.names = c("date", "beta", "conf"))
pdf(file = "beta_ts_acf.pdf", paper = "special", width = 6, height = 6)
op = par(no.readonly = TRUE)
par(mgp = c(1.75, 0.75, 0))
par(mar = c(3, 3, 0.7, 0.7))
par(mfrow = c(2, 1))
plot(as.Date(as.character(ibm$date), "%Y%m%d"), ibm$beta, type = "l", xlab = "time",
ylab = "beta", lwd = 2, col = "blue", ylim = c(0, 2))
par(new = T)
plot(as.Date(as.character(ibm$date), "%Y%m%d"), ibm$beta + ibm$conf, type = "l",
xlab = "time", ylab = "beta", lwd = 1, col = "red", lty = 2, ylim = c(0, 2))
par(new = T)
plot(as.Date(as.character(ibm$date), "%Y%m%d"), ibm$beta - ibm$conf, type = "l",
xlab = "time", ylab = "beta", lwd = 1, col = "red", lty = 2, ylim = c(0, 2))
acfData <- acf(ibm$beta, lag.max = 40, type = "correlation", plot = FALSE)
conf <- 2/sqrt(length(ibm$beta))
plot(acfData$lag, acfData$acf, type = "h", xlab = "lag", ylab = "ACF", lwd = 2, col = "blue",
ylim = c(-0.3, 1))
par(new = T)
plot(acfData$lag, array(data = conf, dim = length(acfData$lag)), type = "l", xlab = "lag",
ylab = "ACF", lwd = 1, col = "red", lty = 2, ylim = c(-0.3, 1))
par(new = T)
plot(acfData$lag, array(data = -conf, dim = length(acfData$lag)), type = "l", xlab = "lag",
ylab = "ACF", lwd = 1, col = "red", lty = 2, ylim = c(-0.3, 1))
par(op)
dev.off()
rm(list = ls(all = TRUE))
graphics.off()
# read data
ibm = read.table("ibmBeta.dat", header = F, col.names = c("date", "beta", "conf"))
# save output as pdf
# pdf(file = "beta_ts_acf.pdf", paper = "special", width = 6, height = 6)
op = par(no.readonly = TRUE)
par(mgp = c(1.75, 0.75, 0))
par(mar = c(3, 3, 0.7, 0.7))
par(mfrow = c(2, 1))
plot(as.Date(as.character(ibm$date), "%Y%m%d"), ibm$beta, type = "l", xlab = "time",
ylab = "beta", lwd = 2, col = "blue", ylim = c(0, 2))
par(new = T)
plot(as.Date(as.character(ibm$date), "%Y%m%d"), ibm$beta + ibm$conf, type = "l",
xlab = "time", ylab = "beta", lwd = 1, col = "red", lty = 2, ylim = c(0, 2))
par(new = T)
plot(as.Date(as.character(ibm$date), "%Y%m%d"), ibm$beta - ibm$conf, type = "l",
xlab = "time", ylab = "beta", lwd = 1, col = "red", lty = 2, ylim = c(0, 2))
acfData <- acf(ibm$beta, lag.max = 40, type = "correlation", plot = FALSE)
conf <- 2/sqrt(length(ibm$beta))
plot(acfData$lag, acfData$acf, type = "h", xlab = "lag", ylab = "ACF", lwd = 2, col = "blue",
ylim = c(-0.3, 1))
par(new = T)
plot(acfData$lag, array(data = conf, dim = length(acfData$lag)), type = "l", xlab = "lag",
ylab = "ACF", lwd = 1, col = "red", lty = 2, ylim = c(-0.3, 1))
par(new = T)
plot(acfData$lag, array(data = -conf, dim = length(acfData$lag)), type = "l", xlab = "lag",
ylab = "ACF", lwd = 1, col = "red", lty = 2, ylim = c(-0.3, 1))
par(op)
dev.off()
# read data
ibm = read.table("ibmBeta.dat", header = F, col.names = c("date", "beta", "conf"))
# save output as pdf
# pdf(file = "beta_ts_acf.pdf", paper = "special", width = 6, height = 6)
op = par(no.readonly = TRUE)
par(mgp = c(1.75, 0.75, 0))
par(mar = c(3, 3, 0.7, 0.7))
par(mfrow = c(2, 1))
plot(as.Date(as.character(ibm$date), "%Y%m%d"), ibm$beta, type = "l", xlab = "time",
ylab = "beta", lwd = 2, col = "blue", ylim = c(0, 2))
par(new = T)
plot(as.Date(as.character(ibm$date), "%Y%m%d"), ibm$beta + ibm$conf, type = "l",
xlab = "time", ylab = "beta", lwd = 1, col = "red", lty = 2, ylim = c(0, 2))
par(new = T)
plot(as.Date(as.character(ibm$date), "%Y%m%d"), ibm$beta - ibm$conf, type = "l",
xlab = "time", ylab = "beta", lwd = 1, col = "red", lty = 2, ylim = c(0, 2))
acfData <- acf(ibm$beta, lag.max = 40, type = "correlation", plot = FALSE)
conf <- 2/sqrt(length(ibm$beta))
plot(acfData$lag, acfData$acf, type = "h", xlab = "lag", ylab = "ACF", lwd = 2, col = "blue",
ylim = c(-0.3, 1))
par(new = T)
plot(acfData$lag, array(data = conf, dim = length(acfData$lag)), type = "l", xlab = "lag",
ylab = "ACF", lwd = 1, col = "red", lty = 2, ylim = c(-0.3, 1))
par(new = T)
plot(acfData$lag, array(data = -conf, dim = length(acfData$lag)), type = "l", xlab = "lag",
ylab = "ACF", lwd = 1, col = "red", lty = 2, ylim = c(-0.3, 1))
